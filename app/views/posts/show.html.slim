.container
  .d-flex.flex-column
      .border.rounded
        .p-2
          h4 = @post.title
          p.fw-bold.mb-0 #{t('posts.params.category')} #{@post.category.name}
          p.mb-2 #{t('posts.params.author')} #{@post.creator.email[/\w+/]}
          p.bg-light.mb-2.mt-2 = @post.body
          == render partial: 'posts/likes/like', locals: { post: @post, like_by_user: @like_by_user }
          .text-muted
            small #{t('posts.params.liked')} #{@users_liked.empty? ? t('posts.params.no_likes') : @users_liked}
            br
            small = t('posts.params.created', created: time_ago_in_words(@post.created_at))
            br
          span = t('posts.params.comments')
          br
          .border.border-dark.rounded.mt-2
            == render partial: 'posts/comments/form', locals: { new_comment: @new_comment, post: @post, comment: nil }
          - @comments&.each do |comment, _other|
            .border.border-dark.rounded.mt-2
              == render partial: 'posts/comments/comment', locals: { tree: comment.subtree.arrange, post: @post, new_comment: @new_comment }
          .d-flex.flex-sm-row
            - if current_user && @post.creator == current_user
              = link_to t('posts.links.edit'), edit_post_path(@post), class: 'me-2'
              = link_to t('posts.links.delete'), post_path(@post), data: { confirm: t('posts.links.destroy_confirmation') }, method: :delete, class: 'text-danger'
